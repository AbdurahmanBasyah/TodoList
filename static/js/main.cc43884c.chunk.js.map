{"version":3,"sources":["components/header.js","components/Title.js","components/List.js","components/CompletedTask.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","color","React","Component","Title","props","title","ListItems","listItems","items","map","item","message","d","Date","countdown","date","second","Math","floor","minute","hour","name","style","size","onClick","addToCompleted","key","deleteItem","CompletedTask","undoItem","App","useState","taskName","setTaskName","taskDate","setTaskDate","taskKey","setTaskKey","setItems","completed","setCompleted","saveTaskToLocalStorage","localStorage","setItem","JSON","stringify","saveCompletedToLocalStorage","useEffect","todoTasks","parse","getItem","completedTasks","filteredItems","filter","deleteCompleted","sort","a","b","action","id","onSubmit","e","preventDefault","currentItem","for","type","placeholder","value","onChange","document","getElementById","now","required","selectedItem","completedItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sRAgBiBA,E,4JAXb,WACE,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,2CAAa,cAAC,IAAD,CAAYC,MAAM,qB,GALtBC,IAAMC,WCcVC,G,MAdH,SAACC,GAET,OACI,8BACE,kCACI,qBAAKL,UAAU,QAAf,SAAwBK,EAAMC,c,eC0C/BC,MA9Cf,SAAmBF,GACf,IAEMG,EAFQH,EAAMI,MAEIC,KAAK,SAAAC,GAErB,IAOIC,EAPEC,EAAI,IAAIC,KAGRC,EADW,IAAID,KAAKH,EAAKK,KAAM,mBACRH,EACvBI,EAASC,KAAKC,MAAMJ,EAAU,KAC9BK,EAASF,KAAKC,MAAMF,EAAO,IAC3BI,EAAOH,KAAKC,MAAMC,EAAO,IAW/B,OARIR,EADAS,EAAO,EACG,kBACHA,EAAO,GACJ,YACHA,EAAO,GACJ,eAEAH,KAAKC,MAAME,EAAK,IAAM,aAGhC,sBAAKrB,UAAU,iBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,6BAAKW,EAAKW,OACV,oBAAIC,MAAOF,EAAO,GAAI,CAACpB,MAAM,OAAQoB,EAAO,GAAG,CAACpB,MAAM,UAAU,CAACA,MAAM,SAAvE,SAAkFW,OAEtF,sBAAKZ,UAAU,iBAAf,UACI,cAAC,IAAD,CAAewB,KAAM,GAAIxB,UAAU,YAAYyB,QAAS,kBAAMpB,EAAMqB,eAAef,EAAKgB,QACxF,cAAC,IAAD,CAASH,KAAM,GAAIxB,UAAW,OAAOyB,QAAS,kBAAMpB,EAAMuB,WAAWjB,EAAKgB,iBAS9F,OACI,8BACKnB,K,QCdEqB,EA3BO,SAACxB,GACnB,IACMG,EADQH,EAAMI,MACIC,KAAK,SAAAC,GAEzB,OACI,sBAAKX,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKW,EAAKW,SAEd,sBAAKtB,UAAU,iBAAf,UACI,cAAC,IAAD,CAAQwB,KAAM,GAAIxB,UAAU,YAAYyB,QAAS,kBAAMpB,EAAMyB,SAASnB,EAAKgB,QAC3E,cAAC,IAAD,CAAS3B,UAAW,OAAOwB,KAAM,GAAIC,QAAS,kBAAMpB,EAAMuB,WAAWjB,EAAKgB,iBAS1F,OACI,8BACKnB,KC0GEuB,EA7HH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACPC,EADO,KACGC,EADH,OAEkBF,mBAAS,IAF3B,mBAEPG,EAFO,KAEGC,EAFH,OAGgBJ,mBAAS,IAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAIYN,mBAAS,IAJrB,mBAIPvB,EAJO,KAIA8B,EAJA,OAKoBP,mBAAS,IAL7B,mBAKPQ,EALO,KAKIC,EALJ,KAOVC,EAAyB,SAACjC,GAC9BkC,aAAaC,QAAQ,wBAAyBC,KAAKC,UAAUrC,KAGzDsC,EAA8B,SAACtC,GACnCkC,aAAaC,QAAQ,4BAA6BC,KAAKC,UAAUrC,KAGnEuC,qBAAU,WACR,IAAMC,EAAYJ,KAAKK,MAAMP,aAAaQ,QAAQ,0BAC/CF,GACDV,EAASU,KAEV,IAGHD,qBAAU,WACR,IAAMI,EAAiBP,KAAKK,MAAMP,aAAaQ,QAAQ,8BACpDC,GACDX,EAAaW,KAEd,IAEH,IAsBMxB,EAAa,SAACD,GAClB,IAAM0B,EAAgB5C,EAAM6C,QAAO,SAAA3C,GAAI,OAAIA,EAAKgB,MAAQA,KACxDY,EAASc,GACTX,EAAuBW,IAmBnBE,EAAkB,SAAC5B,GACvB,IAAM0B,EAAgBb,EAAUc,QAAO,SAAA3C,GAAI,OAAIA,EAAKgB,MAAQA,KAC5Dc,EAAaY,GACbN,EAA4BM,IAGb5C,EAAM+C,MAAK,SAACC,EAAGC,GAC9B,OAAID,EAAEnC,KAAOoC,EAAEpC,MACL,EACCmC,EAAEnC,KAAOoC,EAAEpC,KACb,EACA,KAGT,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,OAAf,UACE,0DACA,cAAC,EAAD,CAAOM,MAAM,aACb,uBAAMqD,OAAO,GAAGC,GAAG,YAAYC,SArDvB,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAW,sBAAOvD,GAAP,CAAc,CAACa,KAAKW,EAAUjB,KAAKmB,EAAUR,IAAIU,KAClEE,EAASyB,GACTtB,EAAuBsB,GACvB5B,EAAY,IACZF,EAAY,IACZI,EAAW,KA8CL,UACQ,uBAAO2B,IAAI,OAAOL,GAAG,aAArB,uBACA,uBAAOM,KAAK,OAAON,GAAG,OAAOtC,KAAK,OAAOtB,UAAU,eAAemE,YAAY,eAAeC,MAAOnC,EAAUoC,SAlE3G,SAACP,GAClB,IAAMxC,EAAOgD,SAASC,eAAe,QAAQH,MAC7ClC,EAAYZ,GACZgB,EAAWxB,KAAK0D,QA+DkIC,UAAU,IAE9I,uBAAOR,IAAI,WAAWL,GAAG,aAAzB,sBACA,uBAAOM,KAAK,OAAON,GAAG,OAAOtC,KAAK,OAAOtB,UAAU,eAAemE,YAAY,WAAWC,MAAOjC,EAAUkC,SA/DvG,SAACP,GAClB,IAAM9C,EAAOsD,SAASC,eAAe,QAAQH,MAC7ChC,EAAYpB,IA6DkIyD,UAAU,IAE9I,yBAAQP,KAAK,SAASE,MAAM,SAASpE,UAAU,gBAA/C,UACI,sBAAMA,UAAU,WAAhB,eACA,sBAAMA,UAAU,WAAhB,4BAIR,uBAEA,cAAC,EAAD,CAAOM,MAAM,cACb,cAAC,EAAD,CAAWG,MAASA,EAAOmB,WAAcA,EAAYF,eA5CtC,SAACC,GACtB,IAAM+C,EAAejE,EAAM6C,QAAO,SAAA3C,GAAI,OAAIA,EAAKgB,MAAQA,KAAK,GAC5DC,EAAWD,GACX,IAAMgD,EAAc,sBAAOnC,GAAP,CAAkBkC,IACtCjC,EAAakC,GACb5B,EAA4B4B,MAyCtB,uBAEA,cAAC,EAAD,CAAOrE,MAAM,cACb,cAAC,EAAD,CAAeG,MAAS+B,EAAWZ,WAAc2B,EAAiBzB,SAzDzD,SAACH,GAChB,IAAM+C,EAAelC,EAAUc,QAAO,SAAA3C,GAAI,OAAIA,EAAKgB,MAAQA,KAAK,GAC1DqC,EAAW,sBAAOvD,GAAP,CAAciE,IAC/BnC,EAASyB,GACTT,EAAgB5B,GAChBoB,EAA4BiB,aC3DjBY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.cc43884c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FiBookmark } from 'react-icons/fi';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className='header'>\r\n          <div className=\"header-container\">\r\n            <p>Todo List <FiBookmark color=\"white\"/></p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Header;\r\n","import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from '../App';\r\n\r\nconst Title = (props) => {\r\n\r\n      return (\r\n          <div>\r\n            <section>\r\n                <div className=\"title\">{props.title}</div>\r\n            </section>\r\n          </div>\r\n      );\r\n    }\r\n\r\n    \r\n  \r\n  \r\n  export default Title;\r\n","import React from \"react\";\r\nimport './List.css';\r\nimport { BsTrash, BsCheckCircle } from 'react-icons/bs';\r\n\r\n\r\nfunction ListItems(props)  {\r\n    const items = props.items;\r\n\r\n    const listItems = items.map( item =>\r\n        {\r\n            const d = new Date();\r\n            \r\n            const taskDate = new Date(item.date +\"T23:59:00+07:00\")\r\n            const countdown = taskDate - d;\r\n            const second = Math.floor(countdown/1000);\r\n            const minute = Math.floor(second/60);\r\n            const hour = Math.floor(minute/60);\r\n            let message;\r\n            if (hour < 0){\r\n                message = \"Deadline passed\";\r\n            } else if (hour < 24) {\r\n                message = \"Due today\";\r\n            } else if (hour < 48) {\r\n                message = \"Due tomorrow\";\r\n            } else {\r\n                message = Math.floor(hour/24) + \" days left\";\r\n            }\r\n            return (\r\n                <div className=\"list-container\">\r\n                    <div className=\"list-title\">\r\n                        <h4>{item.name}</h4>\r\n                        <h5 style={hour < 24? {color:\"red\"}: hour < 48?{color:\"orange\"}:{color:\"black\"}}>{message}</h5>\r\n                    </div>\r\n                    <div className=\"icon-container\">\r\n                        <BsCheckCircle size={32} className=\"mr-3 icon\" onClick={() => props.addToCompleted(item.key)}/>\r\n                        <BsTrash size={32} className= \"icon\" onClick={() => props.deleteItem(item.key)}/>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {listItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems;","import React from \"react\";\r\nimport './List.css';\r\nimport { BsTrash } from 'react-icons/bs';\r\nimport { CgUndo } from 'react-icons/cg';\r\n\r\nconst CompletedTask = (props) =>  {\r\n    const items = props.items;\r\n    const listItems = items.map( item =>\r\n        {\r\n        return (\r\n            <div className=\"list-container\">\r\n                <div className=\"list-title\">\r\n                    <h4>{item.name}</h4>\r\n                </div>\r\n                <div className=\"icon-container\">\r\n                    <CgUndo size={32} className=\"mr-3 icon\" onClick={() => props.undoItem(item.key)}/>\r\n                    <BsTrash className= \"icon\" size={32} onClick={() => props.deleteItem(item.key)}/>\r\n                </div>\r\n\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {listItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompletedTask;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Title from \"./components/Title\";\nimport ListItems from './components/List';\nimport CompletedTask from './components/CompletedTask';\n\nconst App = () => {\n    const [taskName, setTaskName] = useState(\"\");\n    const [taskDate, setTaskDate] = useState(\"\");\n    const [taskKey, setTaskKey] = useState(\"\");\n    const [items, setItems] = useState([]);\n    const [completed, setCompleted] = useState([]);\n\n  const saveTaskToLocalStorage = (items) => {\n    localStorage.setItem('react-todos-app-tasks', JSON.stringify(items));\n  }\n\n  const saveCompletedToLocalStorage = (items) => {\n    localStorage.setItem('react-todos-app-completed', JSON.stringify(items));\n  }\n\n  useEffect(() => {\n    const todoTasks = JSON.parse(localStorage.getItem('react-todos-app-tasks'))\n    if(todoTasks){\n      setItems(todoTasks)\n    }\n  }, [])\n\n\n  useEffect(() => {\n    const completedTasks = JSON.parse(localStorage.getItem('react-todos-app-completed'))\n    if(completedTasks){\n      setCompleted(completedTasks)\n    }\n  }, [])\n\n  const handleText = (e) => {\n    const name = document.getElementById(\"name\").value;\n    setTaskName(name)\n    setTaskKey(Date.now());\n  }\n\n  const handleDate = (e) => {\n    const date = document.getElementById(\"date\").value;\n    setTaskDate(date)\n  }\n\n  const addTask = (e) => {\n    e.preventDefault();\n    const currentItem = [...items, {name:taskName, date:taskDate, key:taskKey}]\n    setItems(currentItem);\n    saveTaskToLocalStorage(currentItem);\n    setTaskDate(\"\");\n    setTaskName(\"\");\n    setTaskKey(\"\");\n\n  }\n\n  const deleteItem = (key) => {\n    const filteredItems = items.filter(item => item.key !== key);\n    setItems(filteredItems);\n    saveTaskToLocalStorage(filteredItems);\n  }\n\n  const undoItem = (key) =>{\n    const selectedItem = completed.filter(item => item.key === key)[0];\n    const currentItem = [...items, selectedItem]\n    setItems(currentItem);\n    deleteCompleted(key);\n    saveCompletedToLocalStorage(currentItem);\n  }\n\n  const addToCompleted = (key) => {\n    const selectedItem = items.filter(item => item.key === key)[0];\n    deleteItem(key);\n    const completedItems = [...completed, selectedItem];\n    setCompleted(completedItems);\n    saveCompletedToLocalStorage(completedItems);\n  }\n\n  const deleteCompleted = (key) => {\n    const filteredItems = completed.filter(item => item.key !== key);\n    setCompleted(filteredItems);\n    saveCompletedToLocalStorage(filteredItems);\n  }\n\n  const sortName = items.sort((a, b) => {\n    if (a.name < b.name) {\n      return -1;\n    } else if (a.name > b.name) {\n      return 1\n    } return 0 \n  })\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className='main'>\n          <p>Organize your task better</p>\n          <Title title=\"New Task\"/>\n          <form action=\"\" id=\"task-form\" onSubmit={addTask}>\n                  <label for=\"name\" id=\"label-name\">Task Name</label>\n                  <input type=\"text\" id=\"name\" name=\"name\" className=\"form-control\" placeholder=\"New Activity\" value={taskName} onChange={handleText} required={true}></input>\n             \n                  <label for=\"due-date\" id=\"label-date\">Due Date</label>\n                  <input type=\"date\" id=\"date\" name=\"date\" className=\"form-control\" placeholder=\"02/12/21\" value={taskDate} onChange={handleDate} required={true}></input>\n              \n              <button type=\"submit\" value=\"Submit\" className=\"submit-button\">\n                  <span className=\"add-icon\">+</span>\n                  <span className=\"add-text\">Add Task</span>\n              </button>\n          </form>\n\n          <hr></hr>\n\n          <Title title=\"Task List\"/>\n          <ListItems items = {items} deleteItem = {deleteItem} addToCompleted = {addToCompleted}></ListItems>\n\n          <hr></hr>\n\n          <Title title=\"Completed\"/>\n          <CompletedTask items = {completed} deleteItem = {deleteCompleted} undoItem = {undoItem}/>\n          {/* <button onClick={sortName}>sort</button> */}\n        </div>\n        \n        \n      </div>\n    )\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}